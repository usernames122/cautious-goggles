import { decodeType } from './index';
export declare type IEmployee = decodeType<typeof employeeDecoder>;
export declare const employeeDecoder: import("./types").DecoderFunction<{
    renamedfield: string[];
    month2: number;
    maybessn: string | undefined;
    employeeIdentifier2: string;
    month: number;
    employeeIdentifier: string;
    employeeId: number;
    name: string;
    set: Set<string | number | {
        data: boolean;
    }>;
    employees: Map<number, {
        employeeId: number;
        name: string;
        ssn: string | undefined;
    }>;
    dict: Map<string, string | number>;
    phoneNumbers: string[];
    address: {
        city: string;
    };
    secondAddrese: {
        city: string;
        option: number | undefined;
    } | undefined;
    ageAndReputation: [number, string];
    discriminatedUnion: {
        discriminant: "one";
    } | {
        discriminant: "two";
        data: string;
    };
    message: ["message", string] | ["something-else", {
        somestuff: string;
    }];
    uni: "uni" | {
        lol: string;
    };
    likes: ["likt", number][];
    likes2: ["likt", number][];
    isEmployed: boolean;
    dateOfBirth: Date;
    ssn: string | undefined;
    girlfriend: string | null;
    test: string | Date;
    just: (string | boolean | [unknown, unknown] | {
        [x: string]: unknown;
    })[];
}>;
