"use strict";
/**
 * Javascript Objects
 * These are not Json which are strings (javascript (literal) notation),
 * these are plain old javascript objects
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.assert_is_pojo = exports.isPojo = exports.isPojoArray = exports.isPojoObject = exports.isPojoPrimitve = void 0;
var isPojoPrimitve = function (value) {
    return typeof value === 'string' ||
        typeof value === 'boolean' ||
        typeof value === 'number' ||
        typeof value === 'undefined' ||
        (typeof value === 'object' && value === null);
};
exports.isPojoPrimitve = isPojoPrimitve;
var isPojoObject = function (value) {
    return typeof value === 'object' && value !== null;
};
exports.isPojoObject = isPojoObject;
var isPojoArray = function (value) {
    return Array.isArray(value);
};
exports.isPojoArray = isPojoArray;
var isPojo = function (value) {
    return exports.isPojoPrimitve(value) || exports.isPojoObject(value) || exports.isPojoArray(value);
};
exports.isPojo = isPojo;
function assert_is_pojo(value) {
    if (!exports.isPojo(value)) {
        throw "Value `" + value + "` is not a type that can be parsed by this library. Only primitive JS values and regular JS objects or arrays can be parsed, not classes (think anything that is valid JSON).";
    }
}
exports.assert_is_pojo = assert_is_pojo;
